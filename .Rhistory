audience_age_20=audience_age_20,
audience_age_30=audience_age_30,
audience_age_40=audience_age_40,
audience_age_50=audience_age_50,
netizen_score=netizen_score,
netizen_count=netizen_count,
ntz_male=ntz_male,
ntz_female=ntz_female,
ntz_10=ntz_10,
ntz_20=ntz_20,
ntz_30=ntz_30,
ntz_40=ntz_40,
ntz_50=ntz_50,
audience_score=audience_score,
audience_count=audience_count,
audience_male=audience_male,
audience_female=audience_female,
audience_10=audience_10,
audience_20=audience_20,
audience_30=audience_30,
audience_40=audience_40,
audience_50=audience_50)
library(rvest)
library(progress)
base_url <- "https://movie.naver.com/movie/sdb/rank/rmovie.nhn?sel=pnt&date=20201124"
eliminate <- function(data){
data %>%
gsub("\r", "", .) %>%
gsub("\t", "", .) %>%
gsub("\n", "", .)
}
pb <- progress_bar$new(total = 40)
title <- c()
point <- c()
code <- c()
for(i in 1:40){
url <- paste(base_url, "&page=", i, sep = "")
html <- read_html(url, encoding = 'CP949')
table <- html_nodes(html, '.list_ranking')
title_html <- html_nodes(table, '.tit5 a')
title_text <- html_text(title_html) %>%
eliminate()
title <- c(title, title_text)
point_text <- html_nodes(table, ".point") %>%
html_text()
point <- c(point, point_text)
for(i in 1:50){
link <- html_attrs(title_html)[[i]][1]
code_text <- strsplit(link, "=")[[1]][2]
code <- c(code, code_text)
}
pb$tick()
Sys.sleep(0.01)
}
base_url <- "https://movie.naver.com/movie/bi/mi/basic.nhn?code="
genre <- c()
country <- c()
runtime <- c()
release <- c()
director <- c()
actor	<- c()
view_class <- c()
audience_age_10 <- c()
audience_age_20 <- c()
audience_age_30 <- c()
audience_age_40	<- c()
audience_age_50 <- c()
netizen_score <- c()
netizen_count <- c()
ntz_male <- c()
ntz_female <- c()
ntz_10 <- c()
ntz_20 <- c()
ntz_30 <- c()
ntz_40 <- c()
ntz_50 <- c()
audience_score <- c()
audience_count <- c()
audience_male <- c()
audience_female <- c()
audience_10 <- c()
audience_20 <- c()
audience_30 <- c()
audience_40 <- c()
audience_50 <- c()
pb <- progress_bar$new(total = 1000)
for(i in 1:1000){
url <- paste0(base_url, code[i])
html <- read_html(url, encoding = 'eu-kr')
info <- html_nodes(html, ".info_spec span") %>%
html_text() %>%
eliminate()
genre <- c(genre, info[1])
country <- c(country, info[2])
runtime <- c(runtime, info[3])
release <- c(release, info[4])
view_class <- c(view_class, info[5])
director_data <- html_node(html, xpath='//*[@id="content"]/div[1]/div[2]/div[1]/dl/dd[2]/p') %>%
html_text()
director <- c(director, director_data)
actor_data <- html_node(html, xpath='//*[@id="content"]/div[1]/div[2]/div[1]/dl/dd[3]/p') %>%
html_text()
actor <- c(actor, actor_data)
percent <- html_nodes(html, ".graph_percent") %>%
html_text()
audience_age_10 <- c(audience_age_10, percent[1])
audience_age_20 <- c(audience_age_20, percent[2])
audience_age_30 <- c(audience_age_30, percent[3])
audience_age_40 <- c(audience_age_40, percent[4])
audience_age_50 <- c(audience_age_50, percent[5])
url_point <- gsub("basic", "point", url)
html_point <- read_html(url_point, encoding="eu-kr")
score_ntz_1 <- html_nodes(html_point, xpath='//*[@id="graph_area"]/div[1]/div[1]/div[2]') %>%
html_text() %>%
eliminate() %>%
strsplit(., "참여")
if(length(score_ntz_1)==0){
netizen_score <- c(netizen_score, NA)
netizen_count <- c(netizen_count, NA)
}else{
netizen_score <- c(netizen_score, gsub("\\s", "", score_ntz_1[[1]][1]))
netizen_count <- c(netizen_count, gsub("명", "", score_ntz_1[[1]][2]))
}
score_ntz_2 <- html_nodes(html_point, xpath='//*[@id="netizen_point_graph"]/div/div[1]') %>%
html_nodes(., ".graph_point") %>%
html_text()
ntz_male <- c(ntz_male, score_ntz_2[1])
ntz_female <- c(ntz_female, score_ntz_2[2])
ntz_10 <- c(ntz_10, score_ntz_2[3])
ntz_20 <- c(ntz_20, score_ntz_2[4])
ntz_30 <- c(ntz_30, score_ntz_2[5])
ntz_40 <- c(ntz_40, score_ntz_2[6])
ntz_50 <- c(ntz_50, score_ntz_2[7])
score_aud_1 <- html_nodes(html_point, xpath='//*[@id="actual_point_tab_inner"]') %>%
html_text() %>%
eliminate() %>%
strsplit(., "참여")
if(length(score_aud_1)==0){
audience_score <- c(audience_score, NA)
audience_count <- c(audience_count, NA)
}else{
audience_score <- c(audience_score, score_aud_1[[1]][1])
audience_count <- c(audience_count, score_aud_1[[1]][2])
}
score_aud_2 <- html_nodes(html_point, xpath='//*[@id="actual_point_graph"]') %>%
html_nodes(., ".graph_point") %>%
html_text()
audience_male <- c(audience_male, score_aud_2[1])
audience_female <- c(audience_female, score_aud_2[2])
audience_10 <- c(audience_10, score_aud_2[3])
audience_20 <- c(audience_20, score_aud_2[4])
audience_30 <- c(audience_30, score_aud_2[5])
audience_40 <- c(audience_40, score_aud_2[6])
audience_50 <- c(audience_50, score_aud_2[7])
pb$tick()
Sys.sleep(0.01)
}
library(readxl)
data <- read_xlsx("./Data2/day_201906.xlsx")
setwd("~/Desktop/R")
data <- read_xlsx("./Data2/day_201906.xlsx")
my.cor <- function(x, y){
return(cov(x, y)/sqrt(var(x)*sqrt(var(x))))
}
a <- c(1, 2, 3, 4)
b <- c(1,2,3,4)
my.cor(a, b)
cor(a, b)
cor
my.cor <- function(x, y){
return(cov(x, y)/sqrt(var(x)*sqrt(var(y))))
}
my.cor(a, b)
2^2
my.cor <- function(x, y){
a <- c()
b <- c()
c <- c()
for(i in 1:length(x)){
a <- c(a, x[i]-mean(x))
b <- c(b, y[i]-mean(y))
c <- c(c, a*b)
}
d <- c()
e <- c()
for(i in 1:length(x)){
d <- c(d, (x[i]-mean(x))^2)
e <- c(e, (y[i]-mean(y))^2)
}
return(sum(c)/sqrt(sum(d))*sqrt(sum(e)))
}
a <- c(1, 2, 3, 4)
b <- c(1,2,3,4)
my.cor(a, b)
sum(c)
c
a
b
d
b <- c()
my.cor <- function(x, y){
a <- c()
b <- c()
cs <- c()
for(i in 1:length(x)){
a <- c(a, x[i]-mean(x))
b <- c(b, y[i]-mean(y))
cs <- c(cs, a*b)
}
d <- c()
e <- c()
for(i in 1:length(x)){
d <- c(d, (x[i]-mean(x))^2)
e <- c(e, (y[i]-mean(y))^2)
}
return(sum(cs)/sqrt(sum(d))*sqrt(sum(e)))
}
a <- c(1, 2, 3, 4)
b <- c(1,2,3,4)
my.cor(a, b)
t <- c(1, 2, 3, 4)
f <- c(1,2,3,4)
my.cor <- function(x, y){
a <- c()
b <- c()
cs <- c()
for(i in 1:length(x)){
a <- c(a, x[i]-mean(x))
b <- c(b, y[i]-mean(y))
cs <- c(cs, a*b)
}
d <- c()
e <- c()
for(i in 1:length(x)){
d <- c(d, (x[i]-mean(x))^2)
e <- c(e, (y[i]-mean(y))^2)
}
return(sum(cs)/sqrt(sum(d))*sqrt(sum(e)))
}
View(my.cor)
my.cor(t, f)
a <- c()
b <- c()
cs <- c()
for(i in 1:length(t)){
a <- c(a, t[i]-mean(t))
b <- c(b, f[i]-mean(f))
cs <- c(cs, a*b)
}
cs
length(t)
a <- c()
b <- c()
cs <- c()
for(i in 1:length(t)){
a <- c(a, t[i]-mean(t))
b <- c(b, f[i]-mean(f))
cs <- c(cs, a*b)
}
a
b
a*b
cs <- sum(a*b)
cs
my.cor <- function(x, y){
a <- c()
b <- c()
for(i in 1:length(x)){
a <- c(a, x[i]-mean(x))
b <- c(b, y[i]-mean(y))
}
d <- c()
e <- c()
for(i in 1:length(x)){
d <- c(d, (x[i]-mean(x))^2)
e <- c(e, (y[i]-mean(y))^2)
}
return(sum(a*b)/sqrt(sum(d))*sqrt(sum(e)))
}
t <- c(1, 2, 3, 4)
f <- c(1,2,3,4)
my.cor(t, f)
d <- c()
e <- c()
for(i in 1:length(t)){
d <- c(d, (t[i]-mean(t))^2)
e <- c(e, (f[i]-mean(f))^2)
}
d
e
sum(d)
sqrt(sum(d))
sum(e)
my.cor <- function(x, y){
if(length(x)==length(y)){
a <- c()
b <- c()
for(i in 1:length(x)){
a <- c(a, x[i]-mean(x))
b <- c(b, y[i]-mean(y))
}
d <- c()
e <- c()
for(i in 1:length(x)){
d <- c(d, (x[i]-mean(x))^2)
e <- c(e, (y[i]-mean(y))^2)
}
return(sum(a*b)/(sqrt(sum(d))*sqrt(sum(e))))
}else{
print("error")
}
}
t <- c(1, 2, 3, 4)
f <- c(1,2,3,4)
my.cor(t, f)
a <- c(2, 3, 4, 1, 4, 2)
b <- c(5, 2, 6, 7, 8, 1)
my.cor(a, b)
cor(a, b)
data <- rnorm(50)
data
data_range <- range(data)
data_range
###########2
my_summary <- function(dist, n){
if(dist == 1){
data <- rnorm(n)
data_mean <- mean(data)
return(data_mean)
data_sd <- sd(data)
return(data_sd)
data_var <- var(data)
return(data_var)
data_range <- range(data)
return(data_range)
data_max <- max(data)
return(data_max)
data_min <- min(data)
return(data_min)
data_quantile <- quantile(data, c(0.1, 0.2, 0.25, 0.5, 0.75, 0.8, 0.9))
return(data_quantile)
}
}
my_summary(1, 50)
###########2
my_summary <- function(dist, n){
if(dist == 1){
data <- rnorm(n)
data_mean <- mean(data)
return(data_mean, data_sd)
data_sd <- sd(data)
return(data_sd)
data_var <- var(data)
return(data_var)
data_range <- range(data)
return(data_range)
data_max <- max(data)
return(data_max)
data_min <- min(data)
return(data_min)
data_quantile <- quantile(data, c(0.1, 0.2, 0.25, 0.5, 0.75, 0.8, 0.9))
return(data_quantile)
}else if(dist == 2){
}
}
my_summary(1, 50)
###########2
my_summary <- function(dist, n){
if(dist == 1){
data <- rnorm(n)
data_mean <- mean(data)
paste0("평균 : ", mean_data)
data_sd <- sd(data)
paste0("표준편차 : ", data_sd)
data_var <- var(data)
paste0("분산 : ", data_var)
data_range <- range(data)
paste0("범위 : ", data_range)
data_max <- max(data)
paste0("최대값 : ", data_max)
data_min <- min(data)
paste0("최소값 : ", data_min)
data_quantile <- quantile(data, c(0.1, 0.2, 0.25, 0.5, 0.75, 0.8, 0.9))
paste0("분위수 : ", data_quantile)
}else if(dist == 2){
}
}
my_summary(1, 50)
###########2
my_summary <- function(dist, n){
if(dist == 1){
data <- rnorm(n)
data_mean <- mean(data)
paste0("평균 : ", data_mean)
data_sd <- sd(data)
paste0("표준편차 : ", data_sd)
data_var <- var(data)
paste0("분산 : ", data_var)
data_range <- range(data)
paste0("범위 : ", data_range)
data_max <- max(data)
paste0("최대값 : ", data_max)
data_min <- min(data)
paste0("최소값 : ", data_min)
data_quantile <- quantile(data, c(0.1, 0.2, 0.25, 0.5, 0.75, 0.8, 0.9))
paste0("분위수 : ", data_quantile)
}else if(dist == 2){
}
}
my_summary(1, 50)
var_sd = function(x){
# 분산 =  sum((x - 평균)^2) / n-1
var = sum((x - mean(x))^2) / (length(x) - 1)
sd = sqrt(var)
cat('분산 = ', var, '\n')
cat('표준편차 = ', sd)
}
var_sd(a)
var_sd(c(1, 2, 3, 4))
###########2
my_summary <- function(dist, n){
if(dist == 1){
data <- rnorm(n)
data_mean <- mean(data)
data_sd <- sd(data)
data_var <- var(data)
data_range <- range(data)
data_max <- max(data)
data_min <- min(data)
data_quantile <- quantile(data, c(0.1, 0.2, 0.25, 0.5, 0.75, 0.8, 0.9))
cat("평균 : ", data_mean, '\n')
paste0("표준편차 : ", data_sd, '\n')
paste0("분산 : ", data_var, '\n')
paste0("범위 : ", data_range, '\n')
paste0("최대값 : ", data_max, '\n')
paste0("최소값 : ", data_min, '\n')
paste0("분위수 : ", data_quantile)
}else if(dist == 2){
data <- rexp(n)
data_mean <- mean(data)
}
}
my_summary(1, 50)
data_min <- min(data)
###########2
my_summary <- function(dist, n){
if(dist == 1){
data <- rnorm(n)
data_mean <- mean(data)
data_sd <- sd(data)
data_var <- var(data)
data_range <- range(data)
data_max <- max(data)
data_min <- min(data)
data_quantile <- quantile(data, c(0.1, 0.2, 0.25, 0.5, 0.75, 0.8, 0.9))
cat("평균 : ", data_mean, '\n')
cat("표준편차 : ", data_sd, '\n')
cat("분산 : ", data_var, '\n')
cat("범위 : ", data_range, '\n')
cat("최대값 : ", data_max, '\n')
cat("최소값 : ", data_min, '\n')
cat("분위수 : ", data_quantile)
}else if(dist == 2){
data <- rexp(n)
data_mean <- mean(data)
}
}
my_summary(1, 50)
###########2
my_summary <- function(dist, n){
###########2
my_summary <- function(dist, n){
###########2
my_summary <- function(dist, n){
if(dist == 1){
data <- rnorm(n)
}else if(dist==2){
data <- rexp(n)
}
data_mean <- mean(data)
data_sd <- sd(data)
data_var <- var(data)
data_range <- range(data)
data_max <- max(data)
data_min <- min(data)
data_quantile <- quantile(data, c(0.1, 0.2, 0.25, 0.5, 0.75, 0.8, 0.9))
cat("평균 : ", data_mean, '\n')
cat("표준편차 : ", data_sd, '\n')
cat("분산 : ", data_var, '\n')
cat("범위 : ", data_range, '\n')
cat("최대값 : ", data_max, '\n')
cat("최소값 : ", data_min, '\n')
cat("분위수 : ", data_quantile)
}
my_summary(1, 50)
my_summary(2, 50)
############3
#####a
my.moment <- function(x){
dat_sum <- sum(x)
dat_mean <- mean(x)
dat_var <- sum((x-mean(x))^2) / (length(x)-1)
a <- c()
b <- c()
for(i in 1:length(x)){
a <- c(a, (x[i]-mean(x))^3)
b <- c(b, (x[i]-mean(x))^2)
}
dat_ske <- sum(a)/(sum(b))^(3/2)
}
my.moment(c(1, 2, 3, 4))
dat_ske
